<!DOCTYPE html>
<html lang="en-GB" class="noJS" itemscope itemtype="http://schema.org/Article">
<head>
<!-- This website is written by a guy who claims to have lots of specialised technical skills, but this website only partially demonstrates them.  This website is a vehicle for about 170,000 words, please read some of them. -->
<title>Scaling Mongo populations</title>
<meta http-equiv="X-UA-Compatible" content="IE=Edge" />
<meta name="viewport" content="width=device-width, maximum-scale=1.0" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta http-equiv="Content-Language" content="en-GB" />
<meta name="Generator" content="iceline webkit 2.1" />
<meta name="Author" content="Owen Beresford" />
<meta name="Description" content="Notes on practical upper volume for Mongo." />
<meta name="google-site-verification" content="lSgIe7Nm0H0RYQ2ktQ4vr5Jz0iYGhQd7cTWoVDg3Xss" />
<link href="/asset/favicon-32x32.png" rel="icon" type="image/png" />
<meta itemprop="name" content="Scaling Mongo populations">
<meta itemprop="description" content="Notes on practical upper volume for Mongo.">
<!-- meta name="twitter:card" content="summary_large_image" -->
<meta name="twitter:site" content="@channelOwen">
<meta name="twitter:title" content="Scaling Mongo populations">
<meta name="twitter:description" content="Notes on practical upper volume for Mongo.">
<meta name="twitter:creator" content="@channelOwen">
<meta property="og:title" content="Scaling Mongo populations" />
<meta property="og:type" content="article" />
<meta property="og:url" content="http://owenberesford.me.uk/resource/scaling-mongo" />
<meta property="og:description" content="Notes on practical upper volume for Mongo." />
<meta property="og:site_name" content="OwenBeresford's very wordy site" />
<meta property="article:published_time" content="14th of Jul 2022, 14:31:31" />
<meta property="article:modified_time" content="22nd of Sep 2020" />
<!-- the below track is just a generic cheese track, but the style fits. progressive + uplifting tone.  I do not own the rights or anything. 
TODO: magic tune selection against some index/DB -->
<meta property="og:audio" content="https://www.youtube.com/watch?v=Brl7WmHDG-E" />

<link rel="stylesheet" href="/asset/ob1.min.css" />
<script type="application/ld+json">
  {
    "@context": "https://ogp.me/ns/article#",
    "@type": "Article",
    "name": "Scaling Mongo populations",
	"article:published_time":"14th of Jul 2022, 14:31:31", 
    "article:modified_time":"22nd of Sep 2020",
    "article:section":"technology",

    "author": {
      "@type": "Person",
      "name": "Owen Beresford"
    }
  }
</script>
</head>
<body id="body">
 <div class="h4_page wholeArticle">
  <div class="after_menu articleContent">
   <main id="main">
    <article>
     <div class="blocker">
<div class="halferWords">

<h4 class="dontend" id="toc0"> EDIT late 2016, This article is written for Mongo 2.6. If you are technical enough to read this: beg, borrow steal, do whatever it takes to get up to mongo3.2 <a href="#toc0"> <sup><i class="fa fa-link invert" ></i></sup> </a></h4>
<p>Please know that: The results of adding too many rows is that it runs slower, not that anything explodes.  The business website could run abit slow for a few days until a new server is installed, if necessary.  There are eventually hard limits to row counts, but by the time a company is that big, it has a lot of income, and can buy things.  Whilst 3rd party articles are useful as they cover many hours work; their use is diminished by the age of the article.</p>


<h4 class="dontend" id="toc1"> EDIT late 2017. You now need Mongo 3.4.8 or greater. Features for aggregates are improved, again.   When I get time I will write a new edition for current times. <a href="#toc1"> <sup><i class="fa fa-link invert" ></i></sup> </a></h4>
<p>For comparison, MySQL innodb is getting abit slow, for about 70%/30% mixed read/writes, on a population of a million rows.  In peak time the average query time spikes to 200ms, due to lock stacking.  My situation was continual activity with 50 clients concurrently (i.e. up to 50 queries may happen at any point, with an average case of about 30ms, spiking to 200ms).  Newer hardware would reduce that abit, but these where network heavy rack boxes. The word innodb is important, as this supports row level locking.</p>

<p>What matters for large datasets to be used in continuous concurrent access, is multi-dimensional.  We need to be able to</p>

<ul class="ulbasic">
    <li class="libasic">store the data, </li>
    <li class="libasic">and access it quickly,</li>
    <li class="libasic">and concurrently.</li>
</ul>

<p>The simple limit for items in a single collection to <i>2 ^ 32</i>, or abit more than four billion, unless you use wired tiger project.  Mongo tries to keep the whole index in RAM.  In practical terms that hard limit should never be reached, due to the operational cost of running the database (see RAM).  If the data is splitable across multiple collections, that limit could be ignored.  An imaginary machine could have four billion items per collection, but matched with a simple hash to change the collection, that limit can be extended another 24000 times <sup><a href="http://stackoverflow.com/questions/9858393/limits-of-number-of-collections-in-databases" target="_blank">1</a></sup>.</p>


<h3 class="dontend" id="toc2"> Data modeling <a href="#toc2"> <sup><i class="fa fa-link invert" ></i></sup> </a></h3>
<p>We don't need to hold the entire dataset in RAM, but I am simplifying the technology, as this is purely to get a clearer vision on data volumes.  Text strings in the JS used for Mongo are UTF8 by default.  I have simplified the storage cost of the wchar to 2bytes.  Most of the data under current observation is in ASCII, but an UTF8 char may be 4bytes long.  This is a simple model, and I only spent a few hours on it (I have just completed an economics book, where I was reading summaries of peoples PhD theses).  <b>Model 1</b> If we <i>model</i> a document (one item in the above collection) having about a 100 data points, and up to 255 wchar per point; this means each document has raw RAM cost of about 50KB.  To make the document work as a item in the collection, model 50% increase for indexes etc.  It would be prudent to model a further 50% for everything the operating systems needs to do (network IO for example).  This simple guess means realistic upper bound is 10 documents per MB of RAM.  To store that massive collection would cost 419,430 GB of RAM.  There is no motherboard on the planet that can hold that much RAM.  A less verbose item, with an average wchar length of 20 would cost 4K per item.  That means 256 items per MB of RAM.  To store the maximum collection size would cost 16,384GB of RAM.  20chars would be enough to store an <i>average</i> venue name, an <i>average</i> persons name, an <i>average</i> email address (each item in the collection could be different, but the mean-average would be about that).</p>

<p>Back in the real world, using the same numbers, a 2.5 * 10^6 collection would take 10GB of RAM.  As an average spread of data will be also recording numbers (fixed at 8bytes), and some bools (either 8bytes as its actually a number or 1byte if its a separate type), the documents per MB figure is probably too small (so 4times it, leading to 10 * 10^6 item collection).  This is a simple model, <b>everything should be measured</b>.</p>

<p>It should be noted that the venue density is unlikely to climb above one per hundred people, as venues have to have customers, and most people don't eat out everyday.  I think that 1 per 200 is a more realistic ratio. <i>This paragraph is my opinion</i>, but isn't the focus of the model.  Therefore the UK isn't likely to hold more than 1*10^6 venues in total.</p>

<p>To start a new model (<b>model2</b>), it is necessary for the entire index to be held in RAM.  For any existing data, we may poll Mongo via <i>db.collection.totalIndexSize()</i> <sup><a href="http://docs.mongodb.org/manual/tutorial/ensure-indexes-fit-ram/" target="_blank">2</a></sup>, or <i>db.collection.stats().indexSizes</i> <sup><a href="http://stackoverflow.com/questions/7851563/how-do-you-get-the-size-of-an-individual-index-in-mongodb" target="_blank">3</a></sup> for more detail.  If you are hazy about what indexes are, here is supplementary reading <sup><a href="http://centaurea.io/blog?name=how-mongodb-indexes-depends-on-ram-and-io-operations" target="_blank">4</a></sup>.  For new indexes, there is models already <sup><a href="http://stackoverflow.com/questions/8607637/are-there-any-tools-to-estimate-index-size-in-mongodb" target="_blank">5</a></sup>.  To reproduce here <i>“2 * [ n * ( 18 bytes overhead + avg size of indexed field + 5 or so bytes of conversion fudge factor ) ]&quot;</i> (the same reference states that this is likely to be a factor of two too large, I think that analysis is dependant on the input data.  This means one needs to measure everything again.).  To quote that back, comes to about 400MB for an average text field index.</p>

<p>These models don't mention how-to access the data.</p>


<h3 class="dontend" id="toc3"> Some real data <a href="#toc3"> <sup><i class="fa fa-link invert" ></i></sup> </a></h3>
<p>There is a fairly thorough report <sup><a href="http://jaxenter.com/evaluating-nosql-performance-which-database-is-right-for-your-data-107481.html" target="_blank">6</a></sup> on scaling mixed read and writes for several databases.  This is volume of operations, not volume of data.  Every NoSQL platform was faster than the above MySQL, but this is newer hardware. Skim down the article and look at the graphs, Mongo is in purple.  To express this from a user perspective, at the point we have 13,000 people browsing concurrently (i.e. per minute), we need more AWS boxes, or average page render will be in multiple seconds.  For a standard AWS contract, would <em>definitely need more network bandwidth.</em>  This report is still the older version of Mongo than current.</p>

<p>To supply opinions for “how to architect a billion item collection”, please read official docs <sup><a href="http://docs.mongodb.org/manual/reference/limits/" target="_blank">7</a></sup> or <sup><a href="http://stackoverflow.com/questions/11320907/mongodb-billions-of-documents-in-a-collection" target="_blank">8</a></sup>, with more technical details as <sup><a href="http://blog.zawodny.com/2011/03/06/mongodb-pre-splitting-for-faster-data-loading-and-importing/" target="_blank">9</a></sup>.   This was by the guy running Graigs list servers.</p>

<p>Mongo has better sharding capacity than earlier databases. I reference the official Mongo docs <sup><a href="http://docs.mongodb.org/manual/core/sharding-introduction/" target="_blank">10</a></sup>.  This is how to use larger datasets than will realistically fit inside a single box.  Sharded datasets have management complexities some of which is discussed in <sup><a href="http://stackoverflow.com/questions/6575643/mongodb-sharding-how-does-it-rebalance-when-adding-new-nodes" target="_blank">11</a></sup>.  MySQL uses the term “replication”, Mongo has “replica sets”, documented <sup><a href="http://docs.mongodb.org/manual/core/replication-introduction/" target="_blank">12</a></sup>.   <br />
   <br />
There is a standardised tool ~ Yahoo Cloud Serving Benchmark (YCSB) <a href="https://github.com/brianfrankcooper/YCSB" target="_blank">git</a> <sup><a href="http://www.slideshare.net/kevinhan/yahoo-cloud-serving-benchmark" target="_blank">13</a></sup> ~ which can be installed if you need a more detailed survey. The project was started in 2010, but is still under active development.  This is has been reviewed <sup><a href="https://www.cs.duke.edu/courses/fall13/compsci590.4/838-CloudPapers/ycsb.pdf" target="_blank">14</a></sup> quite thoroughly.</p>

<p>For Mongo writes, using SSD is really useful, there are more details <sup><a href="https://blog.serverdensity.com/mongodb-benchmarks/" target="_blank">15</a></sup>.  This would also be true for every other database.</p>


</div>
</div>
    </article>
   </main>
	<div id="contentGroup" class="adjacentGroup" --data-group="research"><a name="adjacent" href=""></a> <p>Some similar articles in research </p><div id="groupresearch" class="adjacentList"><span class="adjacentItem"><a class="button" href="/resource/group-research" title="This article lists all items in research group.">All of <br />research </a></span> </div> </div> 
  </div>
  <fieldset class="outer_menu articleHeader">
<legend></legend>
<nav>
<div id="tinyScreen" class="addReading">
<header>
<h1>Scaling Mongo populations</h1>
</header>
<a class="button" href="/resource/site-chart" title="open a webpage of what articles this site holds.">Sitemap</a> <a href="http://owenberesford.me.uk/resource/rss" title="Access the sites RSS feed. "><i class="fa fa-rss" aria-hidden="true" aria-label="Open the RSS for this site" ></i></a>
 Share: <a href="https://twitter.com/intent/tweet?text=I+think+this+is+important+http%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fscaling-mongo" title="Share this resource on your twitter account." target="_blank"> <i class="fa fa-twitter" aria-hidden="true" aria-label="Share this article on twitter."></i></a> 
<a href="https://www.linkedin.com/sharing/share-offsite/?url=http%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fscaling-mongo" aria-label="share to linked-in" target="_blank" title="Share this article on linked-in" ><i class="fa fa-linkedin-square" aria-hidden="true" title="Share this article on linked-in" ></i></a>
<a href="http://www.reddit.com/submit?url=http%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fscaling-mongo" target="_blank" title="Share this article on reddit." ><i class="fa fa-reddit-square" aria-hidden="true" aria-label="Share this article on reddit." ></i></a>
</div>
<div id="bigScreen" class="row">
<div class="h4_title column"><header><h1>Scaling Mongo populations</h1></header>


<p id="shareGroup" class="addReading"> 
	<span class="centerBlock">
	<a href="http://owenberesford.me.uk/resource/rss" title="Access the sites RSS feed."> <i class="fa fa-rss" aria-label="Open the RSS for this site." aria-hidden="true"></i> </a> Share: 
	<a href="https://twitter.com/intent/tweet?text=I+think+this+is+important+http%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fscaling-mongo" title="Share this resource on your twitter account." target="_blank"> <i class="fa fa-twitter" aria-label="Share this resource on your twitter account." aria-hidden="true"></i></a> 
	<a href="http://www.reddit.com/submit?url=http%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fscaling-mongo" target="_blank" title="Share this article on reddit" ><i aria-label="Share this article on reddit." class="fa fa-reddit-square" aria-hidden="true"></i></a>
	<a href="https://www.linkedin.com/sharing/share-offsite/?url=http%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fscaling-mongo" aria-label="share to linked-in" target="_blank" title="Share this article on linked-in." ><i class="fa fa-linkedin-square" aria-hidden="true" aria-label="Share this article on linked-in."></i></a>
&shy; Follow 
	</span>
	<a href="https://twitter.com/@publishowen" class="button" rel="me" title="In theory my publications list, if you prefer tweets." ><i class="fa fa-twitter" aria-hidden="true" aria-label="Look at my published list of articles" ></i>@publishowen</a>
<span class="ultraSkinny"> 
<span>Edited <time datetime="2020-09-22T06:51:47">22nd of Sep 2020</time></span>
<span>Created <time datetime="2015-04-19T00:00:00" title="if the value says 03-03-2015; its wrong but that is when this project was moved to the current git project" >19th of Apr 2015</time> </span>
</span>
<a href="Array/resource/scaling-mongo" class="button">[look]</a>
</p></div>
<fieldset class="h4_menu column">
<legend><a id="pageMenu"><i class="fa fa-ob1burger" aria-hidden="true"></i> </a></legend>
<menu><ul class="h4_lean">
<li class="h4_odd"><a href="#toc0">EDIT late 2016, This article is written for Mongo 2.6. If you are technical enough to read this: beg, borrow steal, do whatever it takes to get up to mongo3.2</a></li>
<li><a href="#toc1">EDIT late 2017. You now need Mongo 3.4.8 or greater. Features for aggregates are improved, again.   When I get time I will write a new edition for current times.</a></li>
<li class="h4_odd"><a href="#toc2">Data modeling</a></li>
<li><a href="#toc3">Some real data</a></li>
</ul>
</menu><br />

</fieldset>
</div>
<menu>
<ul class="burgerMenu" >
<li class="h4_odd">Additional features</li>
<li class=""><a href="/resource/home"><i class="fa fa-angle-left" aria-hidden="true"></i> Home</a> </li> 
<li class=""><a href="/resource/search">Search <i class="fa fa-angle-right" aria-hidden="true"></i></a></li>
<li class="h4_odd"><a href="/resource/appearance">Appearance <i class="fa fa-angle-right" aria-hidden="true"></i></a></li>
<li class=""><a href="/resource/translate" id="translateA">Translate <i class="fa fa-angle-right" aria-hidden="true"></i></a></li>
<li class="h4_odd"><a href="#adjacent">Similar articles</a></li>
</ul>
</menu>
</nav>
</fieldset>
 </div>
 <br class="blocker" />
 <div id="biblio"></div>
 <br class="blocker" />
 <footer>
  <div class="h4_footer"> <div class="leftFooter"><a aria-label="Validate CSS" href="http://jigsaw.w3.org/css-validator/check/referer"><img src="/asset/validCSS.png" alt="Valid CSS!" /></a> 
<a href="http://validator.w3.org/check?uri=referer" aria-label="Validate HTML"><img src="/asset/valid-xhtml10.png" alt="Valid XHTML 1.0 Transitional, unfortunately no HTML5 available" /></a></div>
<div class="leftFooter"> 
<a href="http://www.plainenglish.co.uk/services/webcheck.html" target="_blank" title="They, er, don't have a service for >170,000 word sites, so no logo.">Campaign for Plain English</a><br />
My profile: <a href="https://www.linkedin.com/in/owen-beresford-bb6ab030/" target="_blank" aria-label="my linked-in" title="Load my linked-in profile" ><i style="font-size:200%; margin-bottom:0px;" class="fa fa-linkedin-square" aria-hidden="true" aria-label="Open my linked in profile" ></i></a>
</div> Page rendered <time datetime="2022-07-14T14:31:31">14th of Jul 2022, 14:31:31</time>, Copyright &copy; 2022 Owen Beresford, <a class="" href="http://owenberesford.me.uk/resource/contact-me#">contact me</a>.  Last modified <time datetime="2020-09-22T06:51:47">22nd of Sep 2020</time>. <br />

Read the generous <a rel="license" href="http://owenberesford.me.uk/resource/licence#" title="Load the license term; but not that interesting">licence terms</a>, if you feel the need, there is a <a href="http://owenberesford.me.uk/resource/privacy#" title="Load the privacy terms" >privacy here</a>.    View the <a href="http://owenberesford.me.uk/resource/site-chart#" title="Load a page showing all the articles on this site">site map</a>.  <a href="#pageMenu">Jump to menu</a>
</div>
</footer>
<script src="/asset/ob1.min.js" ></script>

</body>
</html>