<!DOCTYPE html>
<html lang="en-GB" class="noJS" itemscope itemtype="http://schema.org/Article">
<head>
<!-- This website is written by a guy who claims to have lots of specialised technical skills, but this website only partially demonstrates them.  This website is a vehicle for about 170,000 words, please read some of them. -->
<title>PHP benchmark</title>
<meta http-equiv="X-UA-Compatible" content="IE=Edge" />
<meta name="viewport" content="width=device-width, maximum-scale=1.0" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta http-equiv="Content-Language" content="en-GB" />
<meta name="Generator" content="iceline webkit 2.1" />
<meta name="Author" content="Owen Beresford" />
<meta name="Description" content="Performance benchmark for PHP operations." />
<meta name="google-site-verification" content="lSgIe7Nm0H0RYQ2ktQ4vr5Jz0iYGhQd7cTWoVDg3Xss" />
<link href="/asset/favicon-32x32.png" rel="icon" type="image/png" />
<meta itemprop="name" content="PHP benchmark">
<meta itemprop="description" content="Performance benchmark for PHP operations.">
<!-- meta name="twitter:card" content="summary_large_image" -->
<meta name="twitter:site" content="@channelOwen">
<meta name="twitter:title" content="PHP benchmark">
<meta name="twitter:description" content="Performance benchmark for PHP operations.">
<meta name="twitter:creator" content="@channelOwen">
<meta property="og:title" content="PHP benchmark" />
<meta property="og:type" content="article" />
<meta property="og:url" content="https://owenberesford.me.uk/resource/php-benchmark" />
<meta property="og:description" content="Performance benchmark for PHP operations." />
<meta property="og:site_name" content="OwenBeresford's very wordy site" />
<meta property="article:published_time" content="19th of Jul 2022, 10:38:18" />
<meta property="article:modified_time" content="21st of Sep 2020" />
<!-- the below track is just a generic cheese track, but the style fits. progressive + uplifting tone.  I do not own the rights or anything. 
TODO: magic tune selection against some index/DB -->
<meta property="og:audio" content="https://www.youtube.com/watch?v=Brl7WmHDG-E" />

<link rel="stylesheet" href="/asset/ob1.min.css" />
<script type="application/ld+json">
  {
    "@context": "https://ogp.me/ns/article#",
    "@type": "Article",
    "name": "PHP benchmark",
	"article:published_time":"19th of Jul 2022, 10:38:18", 
    "article:modified_time":"21st of Sep 2020",
    "article:section":"technology",

    "author": {
      "@type": "Person",
      "name": "Owen Beresford"
    }
  }
</script>
</head>
<body id="body">
 <div class="h4_page wholeArticle">
  <div class="after_menu articleContent">
   <main id="main">
    <article>
     <p>Every so often I write a script to measure how long various common things in my current scripting language take.  The difference between the versions is quite large.</p>


<h3 class="dontend" id="toc0"> Third party benchmarks <a href="#toc0"> <sup><i class="fa fa-link invert" ></i></sup> </a></h3>
<p>I haven't checked that the site testers download all the resources, i.e. pull a page, then download all the attached JS and CSS.  This pipelining is a useful feature of HTTP1.1.  List of bench marks <sup><a href="http://www.phpbench.com/" target="_blank">1</a></sup> <sup><a href="http://www.php-benchmark-script.com/" target="_blank">2</a></sup> <sup><a href="https://github.com/fotuzlab/appgati" target="_blank">3</a></sup> <sup><a href="http://www.metamorphosite.com/php-benchmarks-loops-arrays" target="_blank">4</a></sup> <a href="http://jmeter.apache.org/" target="_blank">item has a good reputation, but its for Java </a> <a href="http://www.cyberciti.biz/tips/howto-performance-benchmarks-a-web-server.html" target="_blank">this is for Apache not php, but is useful as a structure</a> <a href="http://acme.com/software/http_load/" target="_blank">again a site tester</a>.</p>


<h3 class="dontend" id="toc1"> My performance benchmark  <a href="#toc1"> <sup><i class="fa fa-link invert" ></i></sup> </a></h3>
<p>This results are for PHP 5.4.17RC1 (cli) (built: Jun 22 2013 06:27:20) running on Linux iCeLine 3.2.0-45-generic-pae with Arch: i686, CPU(s): 2, CPU MHz: 2800.000 .  At the end, there is a more recent set, on the same hardware.</p>

<p>This is for the version of PHP installed on my workstation at home.  The computer isn't doing much when I ran this test.  I ought to run this script for 5.1, 5.2, and 5.3 in addition.  This script will get increasingly long as I add more categories of results.  It is <a href="https://owenberesford.me.uk//asset/php-benchmark-2013-07-05" target="_blank">available</a> under GPL, but you may want to use the version attached to the iceline project that includes the HTML renderer.</p>

<p>The test script creates loads of lambda functions, in PHP these are not managed by the data memory management <sup><a href="http://stackoverflow.com/questions/1735492/is-there-garbage-collection-in-php" target="_blank">5</a></sup> <sup><a href="http://stackoverflow.com/questions/2461762/force-freeing-memory-in-php" target="_blank">6</a></sup>.</p>

<p>Please see next build.</p>

<table><thead><tr><th class="">Test of:</th><th class="">Duration (n=100000)</th><th class="">deltaRAM</th></tr></thead>
<tr><td class="">Stats for creating LD1 </td><td class="">0.0037s</td><td class="">0 MB</td></tr>
<tr><td class="">Stats for creating LD2 </td><td class="">0.5027s</td><td class="">100 MB</td></tr>
<tr><td class="">Stats for creating LD3 </td><td class="">0.0120s</td><td class="">800 KB</td></tr>
<tr><td class="">Stats for creating LD4 </td><td class="">0.0074s</td><td class="">500 KB</td></tr>
<tr><td class="">[0] linear increment (1php byte code)</td><td class="">0.0079s</td><td class="">0 B</td></tr>
<tr><td class="">[1] linear increment (1php byte code)</td><td class="">0.0060s</td><td class="">0 B</td></tr>
<tr><td class="">[2] linear float addition</td><td class="">0.0075s</td><td class="">0 B</td></tr>
<tr><td class="">[3] linear float increment</td><td class="">0.0084s</td><td class="">0 B</td></tr>
<tr><td class="">[4] linear float increment (+1)</td><td class="">0.0071s</td><td class="">0 B</td></tr>
<tr><td class="">[5] float increment (cast alot)</td><td class="">0.0105s</td><td class="">0 B</td></tr>
<tr><td class="">[6] linear float increment(cast)</td><td class="">0.0090s</td><td class="">0 B</td></tr>
<tr><td class="">[7] string creation</td><td class="">0.0085s</td><td class="">0 B</td></tr>
<tr><td class="">[8] string concat (inc RAM)</td><td class="">0.0129s</td><td class="">300 KB</td></tr>
<tr><td class="">[9] html entities ~ plain</td><td class="">0.0539s</td><td class="">0 B</td></tr>
<tr><td class="">[10] html entities ~ entities</td><td class="">0.0668s</td><td class="">0 B</td></tr>
<tr><td class="">[11] func int addition</td><td class="">0.0291s</td><td class="">0 B</td></tr>
<tr><td class="">[12] func float addition</td><td class="">0.0296s</td><td class="">0 B</td></tr>
<tr><td class="">[13] func string creation</td><td class="">0.0254s</td><td class="">0 B</td></tr>
<tr><td class="">[14] func string cat</td><td class="">1.3472s</td><td class="">300 KB</td></tr>
<tr><td class="">[15] reference string cat</td><td class="">0.0263s</td><td class="">0 B</td></tr>
<tr><td class="">[16] reference int increment</td><td class="">0.0211s</td><td class="">0 B</td></tr>
<tr><td class="">[17] EVAL linear float increment</td><td class="">0.2614s</td><td class="">300 KB</td></tr>
<tr><td class="">[18] EVAL linear int increment </td><td class="">0.2648s</td><td class="">0 B</td></tr>
<tr><td class="">[19] EVAL linear float addition</td><td class="">0.2875s</td><td class="">0 B</td></tr>
<tr><td class="">[20] EVAL string creation</td><td class="">0.3015s</td><td class="">0 B</td></tr>
<tr><td class="">[21] EVAL string concat</td><td class="">0.9640s</td><td class="">800 KB</td></tr>
<tr><td class="">[22] for loop</td><td class="">4.9206s</td><td class="">0 B</td></tr>
<tr><td class="">[23] foreach ($v only) loop</td><td class="">6.3449s</td><td class="">0 B</td></tr>
<tr><td class="">[24] while list</td><td class="">0.0319s</td><td class="">0 B</td></tr>
<tr><td class="">[25] foreach ($k=>$v) loop</td><td class="">8.7256s</td><td class="">0 B</td></tr>
<tr><td class="">[26] simple array_key_exists</td><td class="">0.0257s</td><td class="">0 B</td></tr>
<tr><td class="">[27] isset</td><td class="">0.0106s</td><td class="">0 B</td></tr>
<tr><td class="">[28] in_array</td><td class="">0.0281s</td><td class="">0 B</td></tr>
<tr><td class="">[29] empty</td><td class="">0.0086s</td><td class="">0 B</td></tr>
<tr><td class="">[30] simple array_key_exists largeData</td><td class="">13.0074s</td><td class="">0 B</td></tr>
<tr><td class="">[31] isset largeData</td><td class="">0.0083s</td><td class="">0 B</td></tr>
<tr><td class="">[32] in_array largeData</td><td class="">18.6237s</td><td class="">0 B</td></tr>
<tr><td class="">[33] empty largeData</td><td class="">0.0085s</td><td class="">0 B</td></tr>
<tr><td class="">[34] largerData2 array_key_exists</td><td class="">16,883.9806s</td><td class="">0 B</td></tr>
<tr><td class="">[35] isset largeData2</td><td class="">0.0092s</td><td class="">0 B</td></tr>
<tr><td class="">[36] largerData2 in_array</td><td class="">18,176.7208s</td><td class="">0 B</td></tr>
<tr><td class="">[37] empty largeData2</td><td class="">0.0094s</td><td class="">0 B</td></tr>
<tr><td class="">[38] largerData3 array_key_exists</td><td class="">164.1379s</td><td class="">0 B</td></tr>
<tr><td class="">[39] empty largeData3</td><td class="">0.0102s</td><td class="">0 B</td></tr>
<tr><td class="">[40] largerData3 isset</td><td class="">0.0096s</td><td class="">0 B</td></tr>
<tr><td class="">[41] largerData3 in_array</td><td class="">211.8777s</td><td class="">0 B</td></tr>
<tr><td class="">[42] largerData4 array_key_exists</td><td class="">76.9961s</td><td class="">0 B</td></tr>
<tr><td class="">[43] isset largeData4</td><td class="">0.0089s</td><td class="">0 B</td></tr>
<tr><td class="">[44] largerData4 empty</td><td class="">0.0087s</td><td class="">0 B</td></tr>
<tr><td class="">[45] largerData4 in_array</td><td class="">96.8175s</td><td class="">0 B</td></tr>
<tr><td class="">[46] uniqid</td><td class="">6.3382s</td><td class="">0 B</td></tr>
<tr><td class="">[47] md5</td><td class="">0.0676s</td><td class="">0 B</td></tr>
<tr><td class="">[48] sha1</td><td class="">0.1145s</td><td class="">0 B</td></tr>
<tr><td class="">[49] sha256</td><td class="">0.1481s</td><td class="">0 B</td></tr>
<tr><td class="">[50] sha512</td><td class="">0.4564s</td><td class="">0 B</td></tr>
<tr><td class="">[51] tiger128,3</td><td class="">0.1192s</td><td class="">0 B</td></tr>
<tr><td class="">[52] adler32</td><td class="">0.0662s</td><td class="">0 B</td></tr>
<tr><td class="">[53] crc32b</td><td class="">0.0667s</td><td class="">0 B</td></tr>
<tr><td class="">[54] whirlpool</td><td class="">0.3708s</td><td class="">0 B</td></tr>
<tr><td class="">[55] haval224,3</td><td class="">0.2037s</td><td class="">0 B</td></tr>
<tr><td class="">[56] strcmp by == match</td><td class="">0.0099s</td><td class="">0 B</td></tr>
<tr><td class="">[57] strcmp by == match 2vars</td><td class="">0.0101s</td><td class="">0 B</td></tr>
<tr><td class="">[58] strcmp by == nomatch</td><td class="">0.0107s</td><td class="">0 B</td></tr>
<tr><td class="">[59] strcmp by strcmp</td><td class="">0.0321s</td><td class="">0 B</td></tr>
<tr><td class="">[60] strcmp by !strcmp</td><td class="">0.0302s</td><td class="">0 B</td></tr>
<tr><td class="">[61] strcmp by strcmp 2vars</td><td class="">0.0261s</td><td class="">0 B</td></tr>
<tr><td class="">[62] strcmp by reg</td><td class="">0.2876s</td><td class="">0 B</td></tr>
<tr><td class="">[63] strcmp by strstr</td><td class="">0.0412s</td><td class="">0 B</td></tr>
<tr><td class="">[64] strcmp by preg_match 1</td><td class="">0.0890s</td><td class="">0 B</td></tr>
<tr><td class="">[65] global obj method call</td><td class="">0.0457s</td><td class="">0 B</td></tr>
<tr><td class="">[66] local obj method call</td><td class="">0.0320s</td><td class="">0 B</td></tr>
<tr><td class="">[67] local obj method call</td><td class="">0.0286s</td><td class="">0 B</td></tr>
<tr><td class="">[68] via call_user_func_array</td><td class="">0.1794s</td><td class="">0 B</td></tr>
</table>
<br />
 <p>This second set of results was run on a smaller box, running php5.2.8 “oracle linux”<br />
<table><thead><tr><th class="">Test of:</th><th class="">Duration (n=10000)</th><th class="">deltaRAM</th></tr></thead>
<tr><td class="">Stats for creating LD1 </td><td class="">0.0051s</td><td class="">0 MB</td></tr>
<tr><td class="">Stats for creating LD2 </td><td class="">0.4412s</td><td class="">100 MB</td></tr>
<tr><td class="">Stats for creating LD3 </td><td class="">0.0089s</td><td class="">0 MB</td></tr>
<tr><td class="">Stats for creating LD4 </td><td class="">0.0057s</td><td class="">800 KB</td></tr>
<tr><td class="">[0] linear increment (1php byte code)</td><td class="">0.0008s</td><td class="">0 B</td></tr>
<tr><td class="">[1] linear increment (1php byte code)</td><td class="">0.0005s</td><td class="">0 B</td></tr>
<tr><td class="">[2] linear float addition</td><td class="">0.0005s</td><td class="">0 B</td></tr>
<tr><td class="">[3] linear float increment</td><td class="">0.0010s</td><td class="">0 B</td></tr>
<tr><td class="">[4] linear float increment (+1)</td><td class="">0.0006s</td><td class="">0 B</td></tr>
<tr><td class="">[5] float increment (cast alot)</td><td class="">0.0008s</td><td class="">0 B</td></tr>
<tr><td class="">[6] linear float increment(cast)</td><td class="">0.0010s</td><td class="">0 B</td></tr>
<tr><td class="">[7] string creation</td><td class="">0.0008s</td><td class="">0 B</td></tr>
<tr><td class="">[8] string concat (inc RAM)</td><td class="">0.0008s</td><td class="">0 B</td></tr>
<tr><td class="">[9] html entities ~ plain</td><td class="">0.0060s</td><td class="">0 B</td></tr>
<tr><td class="">[10] html entities ~ entities</td><td class="">0.0104s</td><td class="">0 B</td></tr>
<tr><td class="">[11] func int addition</td><td class="">0.0023s</td><td class="">0 B</td></tr>
<tr><td class="">[12] func float addition</td><td class="">0.0034s</td><td class="">0 B</td></tr>
<tr><td class="">[13] func string creation</td><td class="">0.0023s</td><td class="">0 B</td></tr>
<tr><td class="">[14] func string cat</td><td class="">0.0077s</td><td class="">0 B</td></tr>
<tr><td class="">[15] reference string cat</td><td class="">0.0022s</td><td class="">0 B</td></tr>
<tr><td class="">[16] reference int increment</td><td class="">0.0022s</td><td class="">0 B</td></tr>
<tr><td class="">[17] EVAL linear float increment</td><td class="">0.0143s</td><td class="">300 KB</td></tr>
<tr><td class="">[18] EVAL linear int increment </td><td class="">0.0152s</td><td class="">0 B</td></tr>
<tr><td class="">[19] EVAL linear float addition</td><td class="">0.0161s</td><td class="">0 B</td></tr>
<tr><td class="">[20] EVAL string creation</td><td class="">0.0159s</td><td class="">0 B</td></tr>
<tr><td class="">[21] EVAL string concat</td><td class="">0.0184s</td><td class="">300 KB</td></tr>
<tr><td class="">[22] for loop</td><td class="">0.4287s</td><td class="">0 B</td></tr>
<tr><td class="">[23] foreach ($v only) loop</td><td class="">0.3885s</td><td class="">0 B</td></tr>
<tr><td class="">[24] while list</td><td class="">0.0035s</td><td class="">0 B</td></tr>
<tr><td class="">[25] foreach ($k=>$v) loop</td><td class="">0.5616s</td><td class="">0 B</td></tr>
<tr><td class="">[26] simple array_key_exists</td><td class="">0.0021s</td><td class="">0 B</td></tr>
<tr><td class="">[27] isset</td><td class="">0.0011s</td><td class="">0 B</td></tr>
<tr><td class="">[28] in_array</td><td class="">0.0021s</td><td class="">0 B</td></tr>
<tr><td class="">[29] empty</td><td class="">0.0007s</td><td class="">0 B</td></tr>
<tr><td class="">[30] simple array_key_exists largeData</td><td class="">1.0895s</td><td class="">0 B</td></tr>
<tr><td class="">[31] isset largeData</td><td class="">0.0008s</td><td class="">0 B</td></tr>
<tr><td class="">[32] in_array largeData</td><td class="">1.5965s</td><td class="">0 B</td></tr>
<tr><td class="">[33] empty largeData</td><td class="">0.0008s</td><td class="">0 B</td></tr>
<tr><td class="">[34] largerData2 array_key_exists</td><td class="">1,341.9421s</td><td class="">0 B</td></tr>
<tr><td class="">[35] isset largeData2</td><td class="">0.0008s</td><td class="">0 B</td></tr>
<tr><td class="">[36] largerData2 in_array</td><td class="">1,369.9933s</td><td class="">0 B</td></tr>
<tr><td class="">[37] empty largeData2</td><td class="">0.0008s</td><td class="">0 B</td></tr>
<tr><td class="">[38] largerData3 array_key_exists</td><td class="">8.5157s</td><td class="">0 B</td></tr>
<tr><td class="">[39] empty largeData3</td><td class="">0.0008s</td><td class="">0 B</td></tr>
<tr><td class="">[40] largerData3 isset</td><td class="">0.0008s</td><td class="">0 B</td></tr>
<tr><td class="">[41] largerData3 in_array</td><td class="">10.7186s</td><td class="">0 B</td></tr>
<tr><td class="">[42] largerData4 array_key_exists</td><td class="">5.3160s</td><td class="">0 B</td></tr>
<tr><td class="">[43] isset largeData4</td><td class="">0.0011s</td><td class="">0 B</td></tr>
<tr><td class="">[44] largerData4 empty</td><td class="">0.0010s</td><td class="">0 B</td></tr>
<tr><td class="">[45] largerData4 in_array</td><td class="">6.3577s</td><td class="">0 B</td></tr>
<tr><td class="">[46] uniqid</td><td class="">10.8791s</td><td class="">0 B</td></tr>
<tr><td class="">[47] md5</td><td class="">0.0051s</td><td class="">0 B</td></tr>
<tr><td class="">[48] sha1</td><td class="">0.0074s</td><td class="">0 B</td></tr>
<tr><td class="">[49] sha256</td><td class="">0.0109s</td><td class="">0 B</td></tr>
<tr><td class="">[50] sha512</td><td class="">0.0139s</td><td class="">0 B</td></tr>
<tr><td class="">[51] tiger128,3</td><td class="">0.0066s</td><td class="">0 B</td></tr>
<tr><td class="">[52] adler32</td><td class="">0.0052s</td><td class="">0 B</td></tr>
<tr><td class="">[53] crc32b</td><td class="">0.0060s</td><td class="">0 B</td></tr>
<tr><td class="">[54] whirlpool</td><td class="">0.0185s</td><td class="">0 B</td></tr>
<tr><td class="">[55] haval224,3</td><td class="">0.0150s</td><td class="">0 B</td></tr>
<tr><td class="">[56] strcmp by == match</td><td class="">0.0012s</td><td class="">0 B</td></tr>
<tr><td class="">[57] strcmp by == match 2vars</td><td class="">0.0011s</td><td class="">0 B</td></tr>
<tr><td class="">[58] strcmp by == nomatch</td><td class="">0.0010s</td><td class="">0 B</td></tr>
<tr><td class="">[59] strcmp by strcmp</td><td class="">0.0028s</td><td class="">0 B</td></tr>
<tr><td class="">[60] strcmp by !strcmp</td><td class="">0.0025s</td><td class="">0 B</td></tr>
<tr><td class="">[61] strcmp by strcmp 2vars</td><td class="">0.0023s</td><td class="">0 B</td></tr>
<tr><td class="">[62] strcmp by reg</td><td class="">0.1418s</td><td class="">0 B</td></tr>
<tr><td class="">[63] strcmp by strstr</td><td class="">0.0038s</td><td class="">0 B</td></tr>
<tr><td class="">[64] strcmp by preg_match 1</td><td class="">0.0168s</td><td class="">0 B</td></tr>
<tr><td class="">[65] global obj method call</td><td class="">0.0044s</td><td class="">0 B</td></tr>
<tr><td class="">[66] local obj method call</td><td class="">0.0039s</td><td class="">0 B</td></tr>
<tr><td class="">[67] local obj method call</td><td class="">0.0052s</td><td class="">0 B</td></tr>
<tr><td class="">[68] via call_user_func_array %</td><td class="">0.2531s</td><td class="">0 B</td></tr>
</table>
</p>

<p>The most useful results are for PHP 5.5.6-1, run on the same box as the first results. <br />
<table><thead><tr><th class="">Test of:</th><th class="">Duration (n=10000)</th><th class="">deltaRAM</th></tr></thead>
<tr><td class="">Stats for creating LD1 </td><td class="">0.0051s</td><td class="">0 MB</td></tr>
<tr><td class="">Stats for creating LD2 </td><td class="">1.5619s</td><td class="">100 MB</td></tr>
<tr><td class="">Stats for creating LD3 </td><td class="">0.0316s</td><td class="">800 KB</td></tr>
<tr><td class="">Stats for creating LD4 </td><td class="">0.0251s</td><td class="">500 KB</td></tr>
<tr><td class="">[0] linear increment (1php byte code)</td><td class="">0.0034s</td><td class="">0 B</td></tr>
<tr><td class="">[1] linear increment (1php byte code)</td><td class="">0.0029s</td><td class="">0 B</td></tr>
<tr><td class="">[2] linear float addition</td><td class="">0.0031s</td><td class="">0 B</td></tr>
<tr><td class="">[3] linear float increment</td><td class="">0.0032s</td><td class="">0 B</td></tr>
<tr><td class="">[4] linear float increment (+1)</td><td class="">0.0031s</td><td class="">0 B</td></tr>
<tr><td class="">[5] float increment (cast alot)</td><td class="">0.0033s</td><td class="">0 B</td></tr>
<tr><td class="">[6] linear float increment(cast)</td><td class="">0.0032s</td><td class="">0 B</td></tr>
<tr><td class="">[7] string creation</td><td class="">0.0031s</td><td class="">0 B</td></tr>
<tr><td class="">[8] string concat (inc RAM)</td><td class="">0.0035s</td><td class="">0 B</td></tr>
<tr><td class="">[9] html entities ~ plain</td><td class="">0.0150s</td><td class="">0 B</td></tr>
<tr><td class="">[10] html entities ~ entities</td><td class="">0.0171s</td><td class="">0 B</td></tr>
<tr><td class="">[11] func int addition</td><td class="">0.0143s</td><td class="">0 B</td></tr>
<tr><td class="">[12] func float addition</td><td class="">0.0147s</td><td class="">0 B</td></tr>
<tr><td class="">[13] func string creation</td><td class="">0.0138s</td><td class="">0 B</td></tr>
<tr><td class="">[14] func string cat</td><td class="">0.0239s</td><td class="">0 B</td></tr>
<tr><td class="">[15] reference string cat</td><td class="">0.0145s</td><td class="">0 B</td></tr>
<tr><td class="">[16] reference int increment</td><td class="">0.0139s</td><td class="">0 B</td></tr>
<tr><td class="">[17] EVAL linear float increment</td><td class="">0.0821s</td><td class="">0 B</td></tr>
<tr><td class="">[18] EVAL linear int increment </td><td class="">0.0811s</td><td class="">0 B</td></tr>
<tr><td class="">[19] EVAL linear float addition</td><td class="">0.0849s</td><td class="">0 B</td></tr>
<tr><td class="">[20] EVAL string creation</td><td class="">0.0856s</td><td class="">0 B</td></tr>
<tr><td class="">[21] EVAL string concat</td><td class="">0.0897s</td><td class="">0 B</td></tr>
<tr><td class="">[22] for loop</td><td class="">1.8264s</td><td class="">0 B</td></tr>
<tr><td class="">[23] foreach ($v only) loop</td><td class="">0.9435s</td><td class="">0 B</td></tr>
<tr><td class="">[24] while list</td><td class="">0.0160s</td><td class="">0 B</td></tr>
<tr><td class="">[25] foreach ($k=>$v) loop</td><td class="">1.5119s</td><td class="">0 B</td></tr>
<tr><td class="">[26] simple array_key_exists</td><td class="">0.0126s</td><td class="">0 B</td></tr>
<tr><td class="">[27] isset</td><td class="">0.0037s</td><td class="">0 B</td></tr>
<tr><td class="">[28] in_array</td><td class="">0.0130s</td><td class="">0 B</td></tr>
<tr><td class="">[29] empty</td><td class="">0.0032s</td><td class="">0 B</td></tr>
<tr><td class="">[30] simple array_key_exists largeData</td><td class="">1.1872s</td><td class="">0 B</td></tr>
<tr><td class="">[31] isset largeData</td><td class="">0.0032s</td><td class="">0 B</td></tr>
<tr><td class="">[32] in_array largeData</td><td class="">1.7328s</td><td class="">0 B</td></tr>
<tr><td class="">[33] empty largeData</td><td class="">0.0031s</td><td class="">0 B</td></tr>
<tr><td class="">[34] largerData2 array_key_exists</td><td class="">1,631.4933s</td><td class="">0 B</td></tr>
<tr><td class="">[35] isset largeData2</td><td class="">0.0032s</td><td class="">0 B</td></tr>
<tr><td class="">[36] largerData2 in_array</td><td class="">1,650.6589s</td><td class="">0 B</td></tr>
<tr><td class="">[37] empty largeData2</td><td class="">0.0032s</td><td class="">0 B</td></tr>
<tr><td class="">[38] largerData3 array_key_exists</td><td class="">17.4148s</td><td class="">0 B</td></tr>
<tr><td class="">[39] empty largeData3</td><td class="">0.0035s</td><td class="">0 B</td></tr>
<tr><td class="">[40] largerData3 isset</td><td class="">0.0033s</td><td class="">0 B</td></tr>
<tr><td class="">[41] largerData3 in_array</td><td class="">20.8420s</td><td class="">0 B</td></tr>
<tr><td class="">[42] largerData4 array_key_exists</td><td class="">7.5653s</td><td class="">0 B</td></tr>
<tr><td class="">[43] isset largeData4</td><td class="">0.0033s</td><td class="">0 B</td></tr>
<tr><td class="">[44] largerData4 empty</td><td class="">0.0033s</td><td class="">0 B</td></tr>
<tr><td class="">[45] largerData4 in_array</td><td class="">9.3922s</td><td class="">0 B</td></tr>
<tr><td class="">[46] uniqid</td><td class="">0.6567s</td><td class="">0 B</td></tr>
<tr><td class="">[47] md5</td><td class="">0.0276s</td><td class="">0 B</td></tr>
<tr><td class="">[48] sha1</td><td class="">0.0230s</td><td class="">0 B</td></tr>
<tr><td class="">[49] sha256</td><td class="">0.0259s</td><td class="">0 B</td></tr>
<tr><td class="">[50] sha512</td><td class="">0.0572s</td><td class="">0 B</td></tr>
<tr><td class="">[51] tiger128,3</td><td class="">0.0270s</td><td class="">0 B</td></tr>
<tr><td class="">[52] adler32</td><td class="">0.0186s</td><td class="">0 B</td></tr>
<tr><td class="">[53] crc32b</td><td class="">0.0186s</td><td class="">0 B</td></tr>
<tr><td class="">[54] whirlpool</td><td class="">0.0491s</td><td class="">0 B</td></tr>
<tr><td class="">[55] haval224,3</td><td class="">0.0303s</td><td class="">0 B</td></tr>
<tr><td class="">[56] strcmp by == match</td><td class="">0.0033s</td><td class="">0 B</td></tr>
<tr><td class="">[57] strcmp by == match 2vars</td><td class="">0.0033s</td><td class="">0 B</td></tr>
<tr><td class="">[58] strcmp by == nomatch</td><td class="">0.0033s</td><td class="">0 B</td></tr>
<tr><td class="">[59] strcmp by strcmp</td><td class="">0.0141s</td><td class="">0 B</td></tr>
<tr><td class="">[60] strcmp by !strcmp</td><td class="">0.0138s</td><td class="">0 B</td></tr>
<tr><td class="">[61] strcmp by strcmp 2vars</td><td class="">0.0130s</td><td class="">0 B</td></tr>
<tr><td class="">[62] strcmp by reg</td><td class="">0.0405s</td><td class="">0 B</td></tr>
<tr><td class="">[63] strcmp by strstr</td><td class="">0.0143s</td><td class="">0 B</td></tr>
<tr><td class="">[64] strcmp by preg_match 1</td><td class="">0.0197s</td><td class="">0 B</td></tr>
<tr><td class="">[65] global obj method call</td><td class="">0.0192s</td><td class="">0 B</td></tr>
<tr><td class="">[66] local obj method call</td><td class="">0.0189s</td><td class="">0 B</td></tr>
<tr><td class="">[67] local obj method call</td><td class="">0.0179s</td><td class="">0 B</td></tr>
<tr><td class="">[68] via call_user_func_array</td><td class="">0.0451s</td><td class="">0 B</td></tr>
<tr><td class="">[69] if statement</td><td class="">0.0046s</td><td class="">0 B</td></tr>
<tr><td class="">[70] switch statement</td><td class="">0.0042s</td><td class="">0 B</td></tr>
<tr><td class="">[71] ternary statement</td><td class="">0.0049s</td><td class="">0 B</td></tr>
</table>
</p>

<p><p>I don't understand why the section labelled 'EVAL linear float increament' is so slow or memory expensive.<br />
 *%* This PHP interpreter doesn't like this test item.  I don't understand why the object reference magically doesn't work in this situation.  Look at the source for more detail.</p>

</p>


    </article>
   </main>
	<div id="contentGroup" class="adjacentGroup" --data-group="engineering"><a name="adjacent" href=""></a> <p>Some similar articles in engineering </p><div id="groupengineering" class="adjacentList"><span class="adjacentItem"><a class="button" href="/resource/group-XXX?first=engineering" title="This article lists all items in engineering group.">All of <br />engineering </a></span> </div> </div> 
  </div>
  <fieldset class="outer_menu articleHeader">
<legend></legend>
<nav>
<div id="tinyScreen" class="addReading">
<header>
<h1>PHP benchmark</h1>
</header>
<a class="button" href="/resource/site-chart" title="open a webpage of what articles this site holds.">Sitemap</a> <a href="https://owenberesford.me.uk/resource/rss" title="Access the sites RSS feed. "><i class="fa fa-rss" aria-hidden="true" aria-label="Open the RSS for this site" ></i></a>
 Share: <a href="https://twitter.com/intent/tweet?text=I+think+this+is+important+https%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fphp-benchmark" title="Share this resource on your twitter account." target="_blank"> <i class="fa fa-twitter" aria-hidden="true" aria-label="Share this article on twitter."></i></a> 
<a href="https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fphp-benchmark" aria-label="share to linked-in" target="_blank" title="Share this article on linked-in" ><i class="fa fa-linkedin-square" aria-hidden="true" title="Share this article on linked-in" ></i></a>
<a href="http://www.reddit.com/submit?url=https%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fphp-benchmark" target="_blank" title="Share this article on reddit." ><i class="fa fa-reddit-square" aria-hidden="true" aria-label="Share this article on reddit." ></i></a>
</div>
<div id="bigScreen" class="row">
<div class="h4_title column"><header><h1>PHP benchmark</h1></header>


<p id="shareGroup" class="addReading"> 
	<span class="centerBlock">
	<a href="https://owenberesford.me.uk/resource/rss" title="Access the sites RSS feed."> <i class="fa fa-rss" aria-label="Open the RSS for this site." aria-hidden="true"></i> </a> Share: 
	<a href="https://twitter.com/intent/tweet?text=I+think+this+is+important+https%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fphp-benchmark" title="Share this resource on your twitter account." target="_blank"> <i class="fa fa-twitter" aria-label="Share this resource on your twitter account." aria-hidden="true"></i></a> 
	<a href="http://www.reddit.com/submit?url=https%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fphp-benchmark" target="_blank" title="Share this article on reddit" ><i aria-label="Share this article on reddit." class="fa fa-reddit-square" aria-hidden="true"></i></a>
	<a href="https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fphp-benchmark" aria-label="share to linked-in" target="_blank" title="Share this article on linked-in." ><i class="fa fa-linkedin-square" aria-hidden="true" aria-label="Share this article on linked-in."></i></a>
&shy; Follow 
	</span>
	<a href="https://twitter.com/@publishowen" class="button" rel="me" title="In theory my publications list, if you prefer tweets." ><i class="fa fa-twitter" aria-hidden="true" aria-label="Look at my published list of articles" ></i>@publishowen</a>
<span class="ultraSkinny"> 
<span>Edited <time datetime="2020-09-21T23:17:32">21st of Sep 2020</time></span>
<span>Created <time datetime="2015-03-03T00:00:00" title="if the value says 03-03-2015; its wrong but that is when this project was moved to the current git project" ><strong> &gt;7 Years ago</strong></time> </span>
</span>
</p></div>
<fieldset class="h4_menu column">
<legend><a id="pageMenu"><i class="fa fa-ob1burger" aria-hidden="true"></i> </a></legend>
<menu><ul class="h4_lean">
<li class="h4_odd"><a href="#toc0">Third party benchmarks</a></li>
<li><a href="#toc1">My performance benchmark</a></li>
</ul>
</menu><br />

</fieldset>
</div>
<menu>
<ul class="burgerMenu" >
<li class="h4_odd">Additional features</li>
<li class=""><a href="/resource/home"><i class="fa fa-angle-left" aria-hidden="true"></i> Home</a> </li> 
<li class=""><a href="/resource/search">Search <i class="fa fa-angle-right" aria-hidden="true"></i></a></li>
<li class="h4_odd"><a href="/resource/appearance">Appearance <i class="fa fa-angle-right" aria-hidden="true"></i></a></li>
<li class=""><a href="/resource/translate" id="translateA">Translate <i class="fa fa-angle-right" aria-hidden="true"></i></a></li>
<li class="h4_odd"><a href="#adjacent">Similar articles</a></li>
</ul>
</menu>
</nav>
</fieldset>
 </div>
 <br class="blocker" />
 <div id="biblio"></div>
 <br class="blocker" />
 <footer>
  <div class="h4_footer"> <div class="leftFooter"><a aria-label="Validate CSS" href="http://jigsaw.w3.org/css-validator/check/referer"><img src="/asset/validCSS.png" alt="Valid CSS!" /></a> 
<a href="http://validator.w3.org/check?uri=referer" aria-label="Validate HTML"><img src="/asset/valid-xhtml10.png" alt="Valid XHTML 1.0 Transitional, unfortunately no HTML5 available" /></a></div>
<div class="leftFooter"> 
<a href="http://www.plainenglish.co.uk/services/webcheck.html" target="_blank" title="They, er, don't have a service for >170,000 word sites, so no logo.">Campaign for Plain English</a><br />
My profile: <a href="https://www.linkedin.com/in/owen-beresford-bb6ab030/" target="_blank" aria-label="my linked-in" title="Load my linked-in profile" ><i style="font-size:200%; margin-bottom:0px;" class="fa fa-linkedin-square" aria-hidden="true" aria-label="Open my linked in profile" ></i></a>
</div> Page rendered <time datetime="2022-07-19T10:38:18">19th of Jul 2022, 10:38:18</time>, Copyright &copy; 2022 Owen Beresford, <a class="" href="https://owenberesford.me.uk/resource/contact-me#">contact me</a>.  Last modified <time datetime="2020-09-21T23:17:32">21st of Sep 2020</time>. <br />

Read the generous <a rel="license" href="https://owenberesford.me.uk/resource/licence#" title="Load the license term; but not that interesting">licence terms</a>, if you feel the need, there is a <a href="https://owenberesford.me.uk/resource/privacy#" title="Load the privacy terms" >privacy here</a>.    View the <a href="https://owenberesford.me.uk/resource/site-chart#" title="Load a page showing all the articles on this site">site map</a>.  <a href="#pageMenu">Jump to menu</a>
</div>
</footer>
<script src="/asset/ob1.min.js" ></script>

</body>
</html>