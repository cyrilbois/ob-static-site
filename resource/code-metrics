<!DOCTYPE html>
<html lang="en-GB" class="noJS" itemscope itemtype="http://schema.org/Article">
<head>
<!-- This website is written by a guy who claims to have lots of specialised technical skills, but this website only partially demonstrates them.  This website is a vehicle for about 170,000 words, please read some of them. -->
<title>Code metrics</title>
<meta http-equiv="X-UA-Compatible" content="IE=Edge" />
<meta name="viewport" content="width=device-width, maximum-scale=1.0" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta http-equiv="Content-Language" content="en-GB" />
<meta name="Generator" content="iceline webkit 2.1" />
<meta name="Author" content="Owen Beresford" />
<meta name="Description" content="A colleague didn't understand remarks about refactoring his code" />
<meta name="google-site-verification" content="lSgIe7Nm0H0RYQ2ktQ4vr5Jz0iYGhQd7cTWoVDg3Xss" />
<link href="/asset/favicon-32x32.png" rel="icon" type="image/png" />
<meta itemprop="name" content="Code metrics">
<meta itemprop="description" content="A colleague didn't understand remarks about refactoring his code">
<!-- meta name="twitter:card" content="summary_large_image" -->
<meta name="twitter:site" content="@channelOwen">
<meta name="twitter:title" content="Code metrics">
<meta name="twitter:description" content="A colleague didn't understand remarks about refactoring his code">
<meta name="twitter:creator" content="@channelOwen">
<meta property="og:title" content="Code metrics" />
<meta property="og:type" content="article" />
<meta property="og:url" content="http://owenberesford.me.uk/resource/code-metrics" />
<meta property="og:description" content="A colleague didn't understand remarks about refactoring his code" />
<meta property="og:site_name" content="OwenBeresford's very wordy site" />
<meta property="article:published_time" content="16th of Jul 2022, 13:50:52" />
<meta property="article:modified_time" content="20th of Sep 2020" />
<!-- the below track is just a generic cheese track, but the style fits. progressive + uplifting tone.  I do not own the rights or anything. 
TODO: magic tune selection against some index/DB -->
<meta property="og:audio" content="https://www.youtube.com/watch?v=Brl7WmHDG-E" />

<link rel="stylesheet" href="/asset/ob1.min.css" />
<script type="application/ld+json">
  {
    "@context": "https://ogp.me/ns/article#",
    "@type": "Article",
    "name": "Code metrics",
	"article:published_time":"16th of Jul 2022, 13:50:52", 
    "article:modified_time":"20th of Sep 2020",
    "article:section":"technology",

    "author": {
      "@type": "Person",
      "name": "Owen Beresford"
    }
  }
</script>
</head>
<body id="body">
 <div class="h4_page wholeArticle">
  <div class="after_menu articleContent">
   <main id="main">
    <article>
     <div class="blocker">
<div class="lotsOfWords">
<p>My completed code will tend to match the following measures.  These are heuristics rules not dogmatism.:</p>

<ul class="ulbasic">
    <li class="libasic"><b>General readability measures</b><ul class="ulbasic">
        <li class="libasic">Code is organised in classes (non-OO language still use modules).</li>
        <li class="libasic">The API of a class is organised into messages that make sense inside domain of the object.</li>
        <li class="libasic">The names of the API should be concise and non-ambiguous.</li>
        <li class="libasic">Params, exceptions and returns should be tagged to the compiler, and in the unit docs.  That requires a sensible name and a type.</li>
        <li class="libasic">Avoid non-dictionary abbreviations or acronyms in visible data (i.e. constants, API or classes). Companies and department names are an exception to this.  HTML is fine, HTMLv4_01 is fine, BT21CNclient is fine, realImpl is not, reg0A34 is not.</li>
        <li class="libasic">Although in PHP, constants are not really special; use of constants generally improves readability.  In particular flag values must be constants, as this allows refactoring better, when the requirements change. </li>
        <li class="libasic">Defines are not constants.  All other things being equal, constants are better, as they follow namespace rules.</li>
        <li class="libasic">Most people define constants in caps <sup><a href="http://stackoverflow.com/questions/838929/naming-why-should-named-constants-be-all-uppercase-in-c-java" target="_blank">1</a></sup> <sup><a href="http://stackoverflow.com/questions/777641/why-are-all-caps-constant-considered-bad-coding-style" target="_blank">2</a></sup>.</li>
        <li class="libasic">Orthogonality <sup><a href="https://en.wikipedia.org/wiki/Orthogonality_%28programming%29" target="_blank">3</a></sup> is valued.</li>
        <li class="libasic">In old hardware more than 5 param was inefficient use of registers; this doesn't matter anymore but I apply this limit as a number of the things that a human is likely to be able to retain in short term memory.  This is awkward for functional programming.</li>
        <li class="libasic">Like graph titles, every class should be definable by a single sentence “a class to...&quot;.</li>
        <li class="libasic">An optimised architecture leads to much better outcomes than optimised code.</li>
    </ul></li>
    <li class="libasic"><b>Code complexity measures</b><ul class="ulbasic">
        <li class="libasic">Complex code REQUIRES unit tests.</li>
        <li class="libasic">The basic/minimal structure is a function or method.</li>
        <li class="libasic">I think functions may only have one entry point, but may have many exits (for high level languages, like Python).  Other people disagree on this statement e.g. <sup><a href="http://c2.com/cgi/wiki?SingleFunctionExitPoint" target="_blank">4</a></sup> <sup><a href="http://stackoverflow.com/questions/12745412/single-entry-single-exit-rule" target="_blank">5</a></sup> <sup><a href="http://www.tomdalling.com/blog/coding-tips/coding-tip-have-a-single-exit-point/" target="_blank">6</a></sup>, but tend to use C. </li>
        <li class="libasic">I test on the negative, and die/return early.  This makes the code easier to read, and less indented (but is terrible in C). </li>
        <li class="libasic">Complex code MUST be documented, in the API doc header; and this MUST be updated.  Complex code is not 'cool' or 'professional'.</li>
        <li class="libasic">Functions should be &lt;=50lines, excluding documentation.</li>
        <li class="libasic">Classes should be &lt;=400lines, excluding documentation.</li>
        <li class="libasic">Classes should have &lt;7methods excluding the constructor and any DI setters.  More than this means you have too much responsibility in a single class.</li>
        <li class="libasic">I favour loops over branching, as it can be extended/enhanced faster and more safely.  If a behaviour is true for 1..N, it is trivial to make to true for N+1.   This is doesn't execute as quickly, but in most cases, on a per instruction, level coder time is more important than execution time.  I am aware that “Those who do not study Lisp are doomed to reimplement it, poorly” <sup><a href="http://computer-programming-forum.com/50-lisp/dd6c14848555bc04.htm" target="_blank">7</a></sup> in every major coding project. </li>
        <li class="libasic">I use Facades <sup><a href="https://en.wikipedia.org/wiki/Facade_pattern" target="_blank">8</a></sup> quite often (see 50line function constraint).</li>
        <li class="libasic">If you can't work out how to document a function; you can't test it, so it needs to be refactored.</li>
    </ul></li>
</ul>


</div>
</div>
    </article>
   </main>
	<div id="contentGroup" class="adjacentGroup" --data-group="engineering"><a name="adjacent" href=""></a> <p>Some similar articles in engineering </p><div id="groupengineering" class="adjacentList"><span class="adjacentItem"><a class="button" href="/resource/group-engineering" title="This article lists all items in engineering group.">All of <br />engineering </a></span> </div> </div> 
  </div>
  <fieldset class="outer_menu articleHeader">
<legend></legend>
<nav>
<div id="tinyScreen" class="addReading">
<header>
<h1>Code metrics</h1>
</header>
<a class="button" href="/resource/site-chart" title="open a webpage of what articles this site holds.">Sitemap</a> <a href="http://owenberesford.me.uk/resource/rss" title="Access the sites RSS feed. "><i class="fa fa-rss" aria-hidden="true" aria-label="Open the RSS for this site" ></i></a>
 Share: <a href="https://twitter.com/intent/tweet?text=I+think+this+is+important+http%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fcode-metrics" title="Share this resource on your twitter account." target="_blank"> <i class="fa fa-twitter" aria-hidden="true" aria-label="Share this article on twitter."></i></a> 
<a href="https://www.linkedin.com/sharing/share-offsite/?url=http%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fcode-metrics" aria-label="share to linked-in" target="_blank" title="Share this article on linked-in" ><i class="fa fa-linkedin-square" aria-hidden="true" title="Share this article on linked-in" ></i></a>
<a href="http://www.reddit.com/submit?url=http%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fcode-metrics" target="_blank" title="Share this article on reddit." ><i class="fa fa-reddit-square" aria-hidden="true" aria-label="Share this article on reddit." ></i></a>
</div>
<div id="bigScreen" class="row">
<div class="h4_title column"><header><h1>Code metrics</h1></header>


<p id="shareGroup" class="addReading"> 
	<span class="centerBlock">
	<a href="http://owenberesford.me.uk/resource/rss" title="Access the sites RSS feed."> <i class="fa fa-rss" aria-label="Open the RSS for this site." aria-hidden="true"></i> </a> Share: 
	<a href="https://twitter.com/intent/tweet?text=I+think+this+is+important+http%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fcode-metrics" title="Share this resource on your twitter account." target="_blank"> <i class="fa fa-twitter" aria-label="Share this resource on your twitter account." aria-hidden="true"></i></a> 
	<a href="http://www.reddit.com/submit?url=http%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fcode-metrics" target="_blank" title="Share this article on reddit" ><i aria-label="Share this article on reddit." class="fa fa-reddit-square" aria-hidden="true"></i></a>
	<a href="https://www.linkedin.com/sharing/share-offsite/?url=http%3A%2F%2Fowenberesford.me.uk%2Fresource%2Fcode-metrics" aria-label="share to linked-in" target="_blank" title="Share this article on linked-in." ><i class="fa fa-linkedin-square" aria-hidden="true" aria-label="Share this article on linked-in."></i></a>
&shy; Follow 
	</span>
	<a href="https://twitter.com/@publishowen" class="button" rel="me" title="In theory my publications list, if you prefer tweets." ><i class="fa fa-twitter" aria-hidden="true" aria-label="Look at my published list of articles" ></i>@publishowen</a>
<span class="ultraSkinny"> 
<span>Edited <time datetime="2020-09-20T23:19:12">20th of Sep 2020</time></span>
<span>Created <time datetime="2015-10-25T00:00:00" title="if the value says 03-03-2015; its wrong but that is when this project was moved to the current git project" >25th of Oct 2015</time> </span>
</span>
</p></div>
<fieldset class="h4_menu column">
<legend><a id="pageMenu"><i class="fa fa-ob1burger" aria-hidden="true"></i> </a></legend>
<menu><ul class="h4_lean">
</ul>
</menu><br />

</fieldset>
</div>
<menu>
<ul class="burgerMenu" >
<li class="h4_odd">Additional features</li>
<li class=""><a href="/resource/home"><i class="fa fa-angle-left" aria-hidden="true"></i> Home</a> </li> 
<li class=""><a href="/resource/search">Search <i class="fa fa-angle-right" aria-hidden="true"></i></a></li>
<li class="h4_odd"><a href="/resource/appearance">Appearance <i class="fa fa-angle-right" aria-hidden="true"></i></a></li>
<li class=""><a href="/resource/translate" id="translateA">Translate <i class="fa fa-angle-right" aria-hidden="true"></i></a></li>
<li class="h4_odd"><a href="#adjacent">Similar articles</a></li>
</ul>
</menu>
</nav>
</fieldset>
 </div>
 <br class="blocker" />
 <div id="biblio"></div>
 <br class="blocker" />
 <footer>
  <div class="h4_footer"> <div class="leftFooter"><a aria-label="Validate CSS" href="http://jigsaw.w3.org/css-validator/check/referer"><img src="/asset/validCSS.png" alt="Valid CSS!" /></a> 
<a href="http://validator.w3.org/check?uri=referer" aria-label="Validate HTML"><img src="/asset/valid-xhtml10.png" alt="Valid XHTML 1.0 Transitional, unfortunately no HTML5 available" /></a></div>
<div class="leftFooter"> 
<a href="http://www.plainenglish.co.uk/services/webcheck.html" target="_blank" title="They, er, don't have a service for >170,000 word sites, so no logo.">Campaign for Plain English</a><br />
My profile: <a href="https://www.linkedin.com/in/owen-beresford-bb6ab030/" target="_blank" aria-label="my linked-in" title="Load my linked-in profile" ><i style="font-size:200%; margin-bottom:0px;" class="fa fa-linkedin-square" aria-hidden="true" aria-label="Open my linked in profile" ></i></a>
</div> Page rendered <time datetime="2022-07-16T13:50:52">16th of Jul 2022, 13:50:52</time>, Copyright &copy; 2022 Owen Beresford, <a class="" href="http://owenberesford.me.uk/resource/contact-me#">contact me</a>.  Last modified <time datetime="2020-09-20T23:19:12">20th of Sep 2020</time>. <br />

Read the generous <a rel="license" href="http://owenberesford.me.uk/resource/licence#" title="Load the license term; but not that interesting">licence terms</a>, if you feel the need, there is a <a href="http://owenberesford.me.uk/resource/privacy#" title="Load the privacy terms" >privacy here</a>.    View the <a href="http://owenberesford.me.uk/resource/site-chart#" title="Load a page showing all the articles on this site">site map</a>.  <a href="#pageMenu">Jump to menu</a>
</div>
</footer>
<script src="/asset/ob1.min.js" ></script>

</body>
</html>